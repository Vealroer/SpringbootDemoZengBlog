<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="cn.sinap.zengblog.dao.BlogDao">
    <resultMap id="BlogMap" type="cn.sinap.zengblog.domain.Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="views" column="views"/>
        <result property="appreciation" column="appreciation"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="commentabled" column="commentabled"/>
        <result property="recommend" column="recommend"/>
        <result property="published" column="published"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>
        <result property="typeId" column="type_id"/>
        <result property="userId" column="user_id"/>
        <result property="tagIds" column="tag_ids"/>
        <association property="type" javaType="cn.sinap.zengblog.domain.Type">
            <id property="id" column="typeid"/>
            <result property="name" column="typename"/>
        </association>
        <association property="user" javaType="cn.sinap.zengblog.domain.User">
            <id property="id" column="uid"/>
            <result property="nickname" column="nickname"/>
            <result property="username" column="username"/>
            <result property="email" column="email"/>
            <result property="avatar" column="avatar"/>
        </association>
        <collection property="tags" ofType="cn.sinap.zengblog.domain.Tag">
            <id property="id" column="tagid"/>
            <result property="name" column="tagname"/>
        </collection>
    </resultMap>

    <delete id="deleteBlog">
        delete from t_blog where id = #{id}
    </delete>

    <select id="getIndexBlog" resultMap="BlogMap">
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
        t.name typename, t.id typeid,
        u.nickname, u.avatar
        from t_blog b, t_type t, t_user u
        where b.type_id = t.id and  u.id = b.user_id  order by b.update_time desc
    </select>

    <select id="getAllBlog" resultMap="BlogMap">
            select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published,
                   t.id typeid, t.name typename
            from t_blog b, t_type t
            where b.type_id = t.id
    </select>

    <select id="getByTypeId" resultMap="BlogMap">
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
        t.name typename, t.id typeid,
        u.nickname, u.avatar
        from t_blog b, t_type t, t_user u
        where b.type_id = t.id and u.id = b.user_id and b.type_id = #{typeId} order by b.update_time desc
    </select>

    <select id="getByTagId" resultMap="BlogMap">
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
        t.name typename, t.id typeid,
        t1.name tagname, t1.id tagid,
        u.nickname, u.avatar
        from t_blog b, t_type t, t_user u, t_blog_tags tb, t_tag t1
        where b.type_id = t.id and u.id = b.user_id and tb.blog_id = b.id and tb.tag_id = t1.id and t1.id = #{tagId}
        order by b.update_time desc
    </select>

    <select id="getAllRecommendBlog" resultMap="BlogMap">
        select id, title, recommend from t_blog where recommend = 1 order by update_time desc;
    </select>


    <select id="getBlog" resultMap="BlogMap">
        select b.id, b.published, b.flag, b.title, b.content, b.type_id,
         b.tag_ids, b.first_picture, b.description, b.recommend,
         b.share_statement, b.appreciation, b.commentabled,
         t.id typeid, t.name typename ,tag.id tagid , tag.name tagname
        from t_blog b ,t_type t , t_tag tag , t_blog_tags tb
        where b.type_id = t.id AND tb.blog_id = b.id AND tb.tag_id = tag.id
        and b.id = #{id};
    </select>

    <select id="getDetailedBlog" resultMap="BlogMap">
        select b.id, b.first_picture, b.flag, b.title, b.content, b.views,
        b.update_time,b.commentabled, b.share_statement, b.appreciation,
        u.nickname, u.avatar,
        tag.id tagid, tag.name tagname
        from t_blog b, t_user u, t_tag tag, t_blog_tags tb
        where b.user_id = u.id and tb.blog_id = b.id and tb.tag_id = tag.id and  b.id = #{id}
    </select>

    <select id="getSearchBlog" resultMap="BlogMap">
        <bind name="pattern" value="'%' + query + '%'" />
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
        t.name typename,
        u.nickname, u.avatar
        from t_blog b, t_type t, t_user u
        where b.type_id = t.id and  u.id = b.user_id and (b.title like #{pattern} or b.content like  #{pattern})
        order by b.update_time desc
    </select>

    <select id="searchAllBlog" parameterType="cn.sinap.zengblog.domain.Blog" resultMap="BlogMap">
        <bind name="pattern" value="'%' + title + '%'" />
        select b.id, b.title, b.update_time, b.recommend, b.published, b.type_id, t.id typeid, t.name typename
        from t_blog b ,t_type t
        <where>
            <if test="1 == 1">
                b.type_id = t.id
            </if>
            <if test="typeId != null">
                and b.type_id = #{typeId}
            </if>
            <if test="recommend != null">
                and b.recommend = #{recommend}
            </if>
            <if test="title != null ">
                and b.title like #{pattern}
            </if>
        </where>
    </select>

    <update id="updateBlog" parameterType="cn.sinap.zengblog.domain.Blog">
        update t_blog set published = #{published},flag = #{flag} ,
        title = #{title}, content = #{content}, type_id = #{typeId}, tag_ids = #{tagIds},
        first_picture = #{firstPicture} , description = #{description} , recommend = #{recommend} ,
        share_statement = #{shareStatement}, appreciation = #{appreciation},
        commentabled = #{commentabled} ,update_time = #{updateTime} where id = #{id};
    </update>

    <!--useGeneratedKeys="true"；使用自增主键获取主键值策略
        keyProperty；指定对应的主键属性，也就是mybatis获取到主键值以后，将这个值封装给javaBean的哪个属性
    -->
    <insert id="saveBlog" parameterType="cn.sinap.zengblog.domain.Blog" useGeneratedKeys="true" keyProperty="id">
        insert into t_blog (title, content, first_picture, flag,
        views, appreciation, share_statement, commentabled,published,
        recommend, create_time, update_time, type_id, tag_ids, user_id, description)
        values (#{title}, #{content}, #{firstPicture}, #{flag}, #{views}, #{appreciation},
        #{shareStatement}, #{commentabled}, #{published}, #{recommend}, #{createTime},
        #{updateTime}, #{typeId}, #{tagIds}, #{userId}, #{description});
    </insert>

    <insert id="saveBlogAndTag" parameterType="cn.sinap.zengblog.domain.BlogAndTag">
        insert into t_blog_tags (tag_id, blog_id) values (#{tagId},#{blogId});
    </insert>


    <select id="findGroupYear" resultType="String">
        select DATE_FORMAT(b.update_time, '%Y') from t_blog b order by b.update_time desc
    </select>

    <select id="findByYear" resultMap="BlogMap">
        select b.title, b.update_time, b.id, b.flag
        from t_blog b
        where DATE_FORMAT(b.update_time, "%Y") = #{year}
    </select>

    <delete id="deleteBlogAndTag">
        delete from t_blog_tags where blog_id = #{id}
    </delete>

    <update id="addBlogView">
        update t_blog set views = #{views} where id = #{id}
    </update>

</mapper>